DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films CASCADE;


CREATE TABLE IF NOT EXISTS users (
    id 			INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name 		VARCHAR(255) NOT NULL,
    login 		VARCHAR(127) NOT NULL,
    email 		VARCHAR(255) NOT NULL,
    birthday 	DATE
    );

CREATE TABLE IF NOT EXISTS mpa (
    id 			INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(16)
    );

CREATE TABLE IF NOT EXISTS films (
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR(255) NOT NULL,
    description   VARCHAR(200) NOT NULL,
    release_date  DATE	  NOT NULL,
    duration      INTEGER NOT NULL,
    mpa_id        VARCHAR(16) REFERENCES mpa (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS genre (
    id 			INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     	VARCHAR(50) NOT NULL
    );

CREATE TABLE IF NOT EXISTS film_genres (
    film_id		INTEGER NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    genre_id	INTEGER NOT NULL REFERENCES genre (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
    );

CREATE TABLE IF NOT EXISTS likes (
    film_id		INTEGER NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    user_id		INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
    );

CREATE TABLE IF NOT EXISTS friendship (
    user_id		INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    friend_id	INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    status		INTEGER,
    PRIMARY KEY (user_id, friend_id)
    );
